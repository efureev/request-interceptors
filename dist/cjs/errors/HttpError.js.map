{"version":3,"file":"HttpError.js","names":["HttpError","error","status","statusCode","stack","Error","url","request","responseURL","config","response","data","statusText","statusMessage","setMessage","message","key","select"],"sources":["../../../src/errors/HttpError.ts"],"sourcesContent":["import statusMessage from '../statuses'\nimport { select } from '@feugene/mu'\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios'\nimport type { Nullable } from '../global'\n\n/**\n * Create instant, which represent error object\n */\nexport default class HttpError extends Error {\n  public readonly statusCode: number\n  public readonly statusText: string = ''\n  public readonly stack?: string\n  public readonly error: AxiosError\n\n  public readonly url: string = ''\n  public config: AxiosRequestConfig\n  public readonly request: any\n  public readonly response: Nullable<AxiosResponse>\n\n  public data: any\n\n  constructor(error: AxiosError, status: number) {\n    super()\n\n    this.statusCode = status\n    this.error = error\n    this.stack = error.stack || new Error().stack\n\n    this.url = error.request.responseURL\n    this.config = error.config\n\n    this.request = error?.request\n    this.response = error?.response\n\n    if (!!this.response) {\n      this.data = this.response?.data\n\n      this.statusCode = this.response.status\n      this.statusText = statusMessage(this.statusCode)\n\n      this.setMessage()\n    }\n  }\n\n  protected setMessage(message?: string): void {\n    if (!message) {\n      message = this.response?.data?.message\n    }\n\n    this.message = message || 'Unknown Error'\n  }\n\n  public hasResponse(): boolean {\n    return !!this.response\n  }\n\n  public toHtml() {\n    return `<div><div class=\"title\">${this.message}</div><ul class=\"details list-reset\">${\n      this.statusCode && this.statusText ? `<li>[${this.statusCode}] ${this.statusText}</li>` : ''\n    }<li>[url] ${this.url}</li></ul></div>`\n  }\n\n  /**\n   * @example errorWrap.get('response.data.text')\n   */\n  get(key: string): any {\n    return select(this, key)\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;IACqBA,S;;;;;EAanB,mBAAYC,KAAZ,EAA+BC,MAA/B,EAA+C;IAAA;;IAAA;;IAC7C;;IAD6C,6DAXV,EAWU;;IAAA,sDAPjB,EAOiB;;IAG7C,MAAKC,UAAL,GAAkBD,MAAlB;IACA,MAAKD,KAAL,GAAaA,KAAb;IACA,MAAKG,KAAL,GAAaH,KAAK,CAACG,KAAN,IAAe,IAAIC,KAAJ,GAAYD,KAAxC;IAEA,MAAKE,GAAL,GAAWL,KAAK,CAACM,OAAN,CAAcC,WAAzB;IACA,MAAKC,MAAL,GAAcR,KAAK,CAACQ,MAApB;IAEA,MAAKF,OAAL,GAAeN,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEM,OAAtB;IACA,MAAKG,QAAL,GAAgBT,KAAhB,aAAgBA,KAAhB,uBAAgBA,KAAK,CAAES,QAAvB;;IAEA,IAAI,CAAC,CAAC,MAAKA,QAAX,EAAqB;MAAA;;MACnB,MAAKC,IAAL,qBAAY,MAAKD,QAAjB,mDAAY,eAAeC,IAA3B;MAEA,MAAKR,UAAL,GAAkB,MAAKO,QAAL,CAAcR,MAAhC;MACA,MAAKU,UAAL,GAAkB,IAAAC,iBAAA,EAAc,MAAKV,UAAnB,CAAlB;;MAEA,MAAKW,UAAL;IACD;;IApB4C;EAqB9C;;;;WAED,oBAAqBC,OAArB,EAA6C;MAC3C,IAAI,CAACA,OAAL,EAAc;QAAA;;QACZA,OAAO,sBAAG,KAAKL,QAAR,4EAAG,gBAAeC,IAAlB,yDAAG,qBAAqBI,OAA/B;MACD;;MAED,KAAKA,OAAL,GAAeA,OAAO,IAAI,eAA1B;IACD;;;WAED,uBAA8B;MAC5B,OAAO,CAAC,CAAC,KAAKL,QAAd;IACD;;;WAED,kBAAgB;MACd,2CAAkC,KAAKK,OAAvC,oDACE,KAAKZ,UAAL,IAAmB,KAAKS,UAAxB,kBAA6C,KAAKT,UAAlD,eAAiE,KAAKS,UAAtE,aAA0F,EAD5F,uBAEa,KAAKN,GAFlB;IAGD;IAED;AACF;AACA;;;;WACE,aAAIU,GAAJ,EAAsB;MACpB,OAAO,IAAAC,UAAA,EAAO,IAAP,EAAaD,GAAb,CAAP;IACD;;;;iCA3DoCX,K"}