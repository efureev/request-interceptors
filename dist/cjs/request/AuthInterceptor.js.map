{"version":3,"file":"AuthInterceptor.js","names":["AuthInterceptor","options","extra","config","auth","getExtra","headers","Authorization","isFunction"],"sources":["../../../src/request/AuthInterceptor.ts"],"sourcesContent":["import { isFunction } from '@feugene/mu'\nimport type { ExtraProperties, InterceptorSuccessParam, LayerConfig } from '@feugene/layer-request'\nimport type { AxiosRequestConfig, AxiosRequestHeaders } from 'axios'\n\nconst AuthInterceptor =\n  (options: LayerConfig, extra: ExtraProperties): InterceptorSuccessParam<AxiosRequestConfig> =>\n  (config: AxiosRequestConfig): AxiosRequestConfig => {\n    const auth = options.getExtra('auth')\n    if (auth) {\n      ;(<AxiosRequestHeaders>config.headers).Authorization = isFunction(auth) ? auth(config) : config.auth\n    } else {\n      config.headers && delete config.headers.Authorization\n    }\n\n    return config\n  }\n\nexport default AuthInterceptor\n"],"mappings":";;;;;;;AAAA;;AAIA,IAAMA,eAAe,GACnB,SADIA,eACJ,CAACC,OAAD,EAAuBC,KAAvB;EAAA,OACA,UAACC,MAAD,EAAoD;IAClD,IAAMC,IAAI,GAAGH,OAAO,CAACI,QAAR,CAAiB,MAAjB,CAAb;;IACA,IAAID,IAAJ,EAAU;MACR;MAAuBD,MAAM,CAACG,OAA7B,CAAsCC,aAAtC,GAAsD,IAAAC,cAAA,EAAWJ,IAAX,IAAmBA,IAAI,CAACD,MAAD,CAAvB,GAAkCA,MAAM,CAACC,IAA/F;IACF,CAFD,MAEO;MACLD,MAAM,CAACG,OAAP,IAAkB,OAAOH,MAAM,CAACG,OAAP,CAAeC,aAAxC;IACD;;IAED,OAAOJ,MAAP;EACD,CAVD;AAAA,CADF;;eAaeH,e"}