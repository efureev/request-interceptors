{"version":3,"file":"ActionsManager.js","names":["ActionsManager","list","Map","type","action","set","typeList","forEach","add","get","Array","from","keys","clear","globalActionManager"],"sources":["../../../../../src/response/ActionInterceptor/actions/ActionsManager.ts"],"sourcesContent":["import { Nullable } from '../../../global'\n\nexport class ActionsManager {\n  private readonly list: Map<string, Function>\n\n  constructor() {\n    this.list = new Map()\n  }\n\n  public add(type: string, action: Function): void {\n    this.list.set(type, action)\n  }\n\n  public addList(typeList: string[], action: Function): void {\n    typeList.forEach((type: string) => {\n      this.add(type, action)\n    })\n  }\n\n  public get(type: string): Nullable<Function> {\n    return this.list.get(type)\n  }\n\n  public keys(): string[] {\n    return Array.from(this.list.keys())\n  }\n\n  public all(): Map<string, Function> {\n    return this.list\n  }\n\n  public clear(): void {\n    this.list.clear()\n  }\n}\n\nconst globalActionManager = new ActionsManager()\n\nexport default globalActionManager\n"],"mappings":";;;;;;;;;;;;;IAEaA,c;EAGX,0BAAc;IAAA;;IACZ,KAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;EACD;;;;WAED,aAAWC,IAAX,EAAyBC,MAAzB,EAAiD;MAC/C,KAAKH,IAAL,CAAUI,GAAV,CAAcF,IAAd,EAAoBC,MAApB;IACD;;;WAED,iBAAeE,QAAf,EAAmCF,MAAnC,EAA2D;MAAA;;MACzDE,QAAQ,CAACC,OAAT,CAAiB,UAACJ,IAAD,EAAkB;QACjC,KAAI,CAACK,GAAL,CAASL,IAAT,EAAeC,MAAf;MACD,CAFD;IAGD;;;WAED,aAAWD,IAAX,EAA6C;MAC3C,OAAO,KAAKF,IAAL,CAAUQ,GAAV,CAAcN,IAAd,CAAP;IACD;;;WAED,gBAAwB;MACtB,OAAOO,KAAK,CAACC,IAAN,CAAW,KAAKV,IAAL,CAAUW,IAAV,EAAX,CAAP;IACD;;;WAED,eAAoC;MAClC,OAAO,KAAKX,IAAZ;IACD;;;WAED,iBAAqB;MACnB,KAAKA,IAAL,CAAUY,KAAV;IACD;;;;;;;AAGH,IAAMC,mBAAmB,GAAG,IAAId,cAAJ,EAA5B;eAEec,mB"}