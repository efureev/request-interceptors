{"version":3,"file":"index.js","names":["globalActionManager","add","DownloadAction","BlobAction","RedirectAction","buildAction","data","interceptorConfig","isObject","isEmpty","type","private","action","get"],"sources":["../../../../../src/response/ActionInterceptor/actions/index.ts"],"sourcesContent":["import { isEmpty, isObject } from '@feugene/mu'\nimport DownloadAction from './DownloadAction'\nimport BlobAction from './BlobAction'\nimport RedirectAction from './RedirectAction'\nimport globalActionManager from './ActionsManager'\nimport type { RawDataType } from './BaseAction'\nimport BaseAction from './BaseAction'\nimport { ActionInterceptorConfig } from '../ActionInterceptor'\nimport { Nullable } from '../../../global'\n\nglobalActionManager.add('download', DownloadAction)\nglobalActionManager.add('blob', BlobAction)\nglobalActionManager.add('redirect', RedirectAction)\n\nexport { globalActionManager }\n\nexport function buildAction(data: RawDataType & { private: boolean }, interceptorConfig: ActionInterceptorConfig): Nullable<BaseAction> {\n  if (!isObject(data) || isEmpty(data.type)) {\n    return\n  }\n\n  if (data.private) {\n    return\n  }\n\n  const action = <any>globalActionManager.get(data.type)\n  if (!action) {\n    return\n  }\n\n  return new action(data, interceptorConfig)\n}\n\n\nexport { BaseAction, DownloadAction, BlobAction, RedirectAction }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAIAA,uBAAA,CAAoBC,GAApB,CAAwB,UAAxB,EAAoCC,uBAApC;;AACAF,uBAAA,CAAoBC,GAApB,CAAwB,MAAxB,EAAgCE,mBAAhC;;AACAH,uBAAA,CAAoBC,GAApB,CAAwB,UAAxB,EAAoCG,uBAApC;;AAIO,SAASC,WAAT,CAAqBC,IAArB,EAA+DC,iBAA/D,EAAiI;EACtI,IAAI,CAAC,IAAAC,YAAA,EAASF,IAAT,CAAD,IAAmB,IAAAG,WAAA,EAAQH,IAAI,CAACI,IAAb,CAAvB,EAA2C;IACzC;EACD;;EAED,IAAIJ,IAAI,CAACK,OAAT,EAAkB;IAChB;EACD;;EAED,IAAMC,MAAM,GAAQZ,uBAAA,CAAoBa,GAApB,CAAwBP,IAAI,CAACI,IAA7B,CAApB;;EACA,IAAI,CAACE,MAAL,EAAa;IACX;EACD;;EAED,OAAO,IAAIA,MAAJ,CAAWN,IAAX,EAAiBC,iBAAjB,CAAP;AACD"}