{"version":3,"file":"WrapperInterceptor.js","names":["errHandler","layerConfig","error","isNativeError","Promise","reject","config","retry","makeHttpError","response","onThrowErrorFn","getExtra","isFunction","errorWrap","WrapperInterceptor","requestExtra","createResponseWrapper","ResponseWrapper","dataKey"],"sources":["../../../../src/response/WrapperInterceptor/WrapperInterceptor.ts"],"sourcesContent":["import { isNativeError, makeHttpError } from '../../errors'\nimport ResponseWrapper from './ResponseWrapper'\nimport { isFunction } from '@feugene/mu'\nimport type { ExtraProperties, InterceptorFn, InterceptorNormal, LayerConfig } from '@feugene/layer-request'\nimport type { AxiosError, AxiosResponse } from 'axios'\n\n\nconst errHandler = (layerConfig: LayerConfig) => (error: AxiosError | Error) => {\n  if (isNativeError(error)) {\n    return Promise.reject(error)\n  }\n\n  const { config } = <AxiosError>error\n  // If config does not exist or the retry option is not set, reject\n  // @ts-ignore\n  if (!config || !config.retry) {\n    return Promise.reject(makeHttpError(<AxiosError>error))\n  }\n\n  if (!(<AxiosError>error).response) {\n    const onThrowErrorFn = layerConfig.getExtra('onThrowErrorFn')\n    if (isFunction(onThrowErrorFn)) {\n      return onThrowErrorFn(error, this)\n      // @todo create none http error\n      // return Promise.reject(makeError(error))\n    }\n  }\n\n  const errorWrap = makeHttpError(<AxiosError>error)\n\n  return Promise.reject(errorWrap)\n}\n\nconst WrapperInterceptor = (): InterceptorFn<AxiosResponse, ResponseWrapper> => {\n  return (layerConfig: LayerConfig, requestExtra: ExtraProperties): InterceptorNormal<AxiosResponse, ResponseWrapper> => [\n    (response: AxiosResponse): ResponseWrapper => createResponseWrapper(response, layerConfig),\n    errHandler(layerConfig),\n  ]\n}\nexport const createResponseWrapper = (response: AxiosResponse, layerConfig: LayerConfig) => new ResponseWrapper(\n  response,\n  layerConfig.getExtra('withoutDataBlock') ? { dataKey: '' } : {},\n)\n\nexport default WrapperInterceptor\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAKA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD;EAAA,OAA8B,UAACC,KAAD,EAA+B;IAC9E,IAAI,IAAAC,qBAAA,EAAcD,KAAd,CAAJ,EAA0B;MACxB,OAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;IACD;;IAED,WAA+BA,KAA/B;IAAA,IAAQI,MAAR,QAAQA,MAAR,CAL8E,CAM9E;IACA;;IACA,IAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,KAAvB,EAA8B;MAC5B,OAAOH,OAAO,CAACC,MAAR,CAAe,IAAAG,qBAAA,EAA0BN,KAA1B,CAAf,CAAP;IACD;;IAED,IAAI,CAAcA,KAAb,CAAoBO,QAAzB,EAAmC;MACjC,IAAMC,cAAc,GAAGT,WAAW,CAACU,QAAZ,CAAqB,gBAArB,CAAvB;;MACA,IAAI,IAAAC,cAAA,EAAWF,cAAX,CAAJ,EAAgC;QAC9B,OAAOA,cAAc,CAACR,KAAD,EAAQ,KAAR,CAArB,CAD8B,CAE9B;QACA;MACD;IACF;;IAED,IAAMW,SAAS,GAAG,IAAAL,qBAAA,EAA0BN,KAA1B,CAAlB;IAEA,OAAOE,OAAO,CAACC,MAAR,CAAeQ,SAAf,CAAP;EACD,CAxBkB;AAAA,CAAnB;;AA0BA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAqD;EAC9E,OAAO,UAACb,WAAD,EAA2Bc,YAA3B;IAAA,OAAgH,CACrH,UAACN,QAAD;MAAA,OAA8CO,qBAAqB,CAACP,QAAD,EAAWR,WAAX,CAAnE;IAAA,CADqH,EAErHD,UAAU,CAACC,WAAD,CAF2G,CAAhH;EAAA,CAAP;AAID,CALD;;AAMO,IAAMe,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACP,QAAD,EAA0BR,WAA1B;EAAA,OAAuD,IAAIgB,wBAAJ,CAC1FR,QAD0F,EAE1FR,WAAW,CAACU,QAAZ,CAAqB,kBAArB,IAA2C;IAAEO,OAAO,EAAE;EAAX,CAA3C,GAA6D,EAF6B,CAAvD;AAAA,CAA9B;;;eAKQJ,kB"}